  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'animal'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'str'
 .pColon
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'remark'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'str'
 .pColon
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'verse'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'countdown'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'fly'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '2'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'spider'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '3'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'bird'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '4'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'cat'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '5'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'dog'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '6'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'goat'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '7'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'cow'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'horse'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'I don't know why she swallowed a fly.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '2'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'That wiggled and jiggled and tickled inside her.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '3'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'How absurd, to swallow a bird.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '4'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'Imagine that, she swallowed a cat.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '5'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'What a hog, to swallow a dog.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '6'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'What a dope, to swallow a goat.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '7'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'I don't know how she swallowed that cow.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'She died of course.'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'I Know an Old Lady'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'verse'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'verse'
 .pGreaterEqual
  .pInteger
  % Output token text '8'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'I know an old lady'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Who swallowed a '
 .pPlus
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'verse'
 .pRightBracket
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pIdentifier
  % Output token text 'verse'
 .pRightBracket
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'countdown'
 .pEquals
  .pIdentifier
  % Output token text 'verse'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'countdown'
 .pLess
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'She swallowed the '
 .pPlus
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'countdown'
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' to catch the '
 .pPlus
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'countdown'
 .pMinus
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pPlus
  .pStringLiteral
  % Output token text ','
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'countdown'
 .pMinusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'verse'
 .pGreater
  .pInteger
  % Output token text '1'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'verse'
 .pLess
  .pInteger
  % Output token text '8'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Perhaps she'll die.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'verse'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The end.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Thank you very much, you're too kind.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'I'll be here until Thursday - try the veal!'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile
