
--------------------------------
Reading file helloworld.pt
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Hello world'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file double.pt
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'input'
 .pComma
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'word'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Anything you can say, I can say twice (end with 'bye'):'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'word'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'word'
 .pPlus
  .pStringLiteral
  % Output token text ' '
 .pPlus
  .pIdentifier
  % Output token text 'word'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'word'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'bye'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file stars.pt
  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'stars'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'stars'
 .pEquals
  .pStringLiteral
  % Output token text ''
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pInteger
  % Output token text '50'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'stars'
 .pEquals
  .pStringLiteral
  % Output token text '*'
 .pPlus
  .pIdentifier
  % Output token text 'stars'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'stars'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file boxes.pt
  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'input'
 .pComma
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'top'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'middle'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'bottom'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'width'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'height'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nacross'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'ndown'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'enter box width and height: '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'width'
 .pComma
  .pIdentifier
  % Output token text 'height'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'enter number of boxes across and down: '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'nacross'
 .pComma
  .pIdentifier
  % Output token text 'ndown'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'width'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
  .pIdentifier
  % Output token text 'height'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'top'
 .pEquals
  .pStringLiteral
  % Output token text ''
 .pSemicolon
  .pIdentifier
  % Output token text 'middle'
 .pEquals
  .pStringLiteral
  % Output token text ''
 .pSemicolon
  .pIdentifier
  % Output token text 'bottom'
 .pEquals
  .pStringLiteral
  % Output token text ''
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pIdentifier
  % Output token text 'width'
 .pStar
  .pIdentifier
  % Output token text 'nacross'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pPercent
  .pIdentifier
  % Output token text 'width'
 .pDoubleEquals
  .pInteger
  % Output token text '0'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'top'
 .pPlusEquals
  .pStringLiteral
  % Output token text ' '
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'middle'
 .pPlusEquals
  .pStringLiteral
  % Output token text '|'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'bottom'
 .pPlusEquals
  .pStringLiteral
  % Output token text '|'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'top'
 .pPlusEquals
  .pStringLiteral
  % Output token text '_'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'middle'
 .pPlusEquals
  .pStringLiteral
  % Output token text ' '
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'bottom'
 .pPlusEquals
  .pStringLiteral
  % Output token text '_'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'top'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pIdentifier
  % Output token text 'ndown'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'j'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'j'
 .pEqualGreater
  .pIdentifier
  % Output token text 'height'
 .pMinus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'middle'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'j'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'bottom'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file bubblesort.pt
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'nelements'
 .pEquals
  .pInteger
  % Output token text '25'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'maxval'
 .pEquals
  .pInteger
  % Output token text '99'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'list'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pIdentifier
  % Output token text 'nelements'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'current'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'lessthan'
 .pLeftParen
  .pIdentifier
  % Output token text 'i'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'j'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'b'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'current'
 .pEquals
  .pIdentifier
  % Output token text 'i'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'b'
 .pEquals
 .pLeftParen
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pLess
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'j'
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'swap'
 .pLeftParen
  .pIdentifier
  % Output token text 'i'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'j'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 't'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'current'
 .pEquals
  .pIdentifier
  % Output token text 'j'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 't'
 .pEquals
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'j'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'j'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 't'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'show'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pColon
  .pInteger
  % Output token text '4'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pIdentifier
  % Output token text 'nelements'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'sort'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pIdentifier
  % Output token text 'nelements'
 .pMinus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pInteger
  % Output token text '0'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'j'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'j'
 .pLess
  .pIdentifier
  % Output token text 'nelements'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'lt'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'lessthan'
 .pLeftParen
  .pIdentifier
  % Output token text 'j'
 .pComma
  .pIdentifier
  % Output token text 'j'
 .pPlus
  .pInteger
  % Output token text '1'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'lt'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
 .pNot
  .pIdentifier
  % Output token text 'lt'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'swap'
 .pLeftParen
  .pIdentifier
  % Output token text 'j'
 .pComma
  .pIdentifier
  % Output token text 'j'
 .pPlus
  .pInteger
  % Output token text '1'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'j'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pMinusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pInteger
  % Output token text '61'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier
  % Output token text 'j'
 .pEquals
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pMinus
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pStar
  .pInteger
  % Output token text '1271'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'j'
 .pPercent
  .pIdentifier
  % Output token text 'maxval'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pDoubleEquals
  .pIdentifier
  % Output token text 'nelements'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'current'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'show'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'sort'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'show'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file pascal.pt
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'pascal'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '15'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'col'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'row'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'addto'
 .pLeftParen
  .pIdentifier
  % Output token text 'index'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'index'
 .pDoubleEquals
  .pInteger
  % Output token text '1'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'pascal'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'pascal'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'pascal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'index'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'pascal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'index'
 .pRightBracket
 .pPlus
  .pIdentifier
  % Output token text 'pascal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'index'
 .pMinus
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'pascal'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'col'
 .pEquals
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'pascal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'col'
 .pRightBracket
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'col'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'col'
 .pGreater
  .pInteger
  % Output token text '15'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pInteger
  % Output token text '1'
 .pColon
  .pInteger
  % Output token text '5'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'row'
 .pEquals
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'col'
 .pEquals
  .pIdentifier
  % Output token text 'row'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'col'
 .pEqualGreater
  .pInteger
  % Output token text '1'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'addto'
 .pLeftParen
  .pIdentifier
  % Output token text 'col'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'col'
 .pMinusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'col'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'col'
 .pLessEqual
  .pIdentifier
  % Output token text 'row'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'pascal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'col'
 .pRightBracket
 .pColon
  .pInteger
  % Output token text '5'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'col'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'row'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'row'
 .pGreater
  .pInteger
  % Output token text '15'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file mbubblesort.pt
  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'nelements'
 .pEquals
  .pInteger
  % Output token text '25'
 .pSemicolon
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'maxval'
 .pEquals
  .pInteger
  % Output token text '99'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier
  % Output token text 'elements'
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'list'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pIdentifier
  % Output token text 'nelements'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'lessthan'
 .pLeftParen
  .pIdentifier
  % Output token text 'i'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'j'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'b'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'b'
 .pEquals
 .pLeftParen
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pLess
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'j'
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'swap'
 .pLeftParen
  .pIdentifier
  % Output token text 'i'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'j'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier
  % Output token text 't'
 .pEquals
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'j'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'j'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 't'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'show'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pColon
  .pInteger
  % Output token text '4'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pIdentifier
  % Output token text 'nelements'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pInteger
  % Output token text '61'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier
  % Output token text 'j'
 .pEquals
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pMinus
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pStar
  .pInteger
  % Output token text '1271'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'list'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'j'
 .pPercent
  .pIdentifier
  % Output token text 'maxval'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pDoubleEquals
  .pIdentifier
  % Output token text 'nelements'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'sort'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pIdentifier
  % Output token text 'nelements'
 .pMinus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pDoubleEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'j'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'j'
 .pDoubleEquals
  .pIdentifier
  % Output token text 'nelements'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'lt'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'lessthan'
 .pLeftParen
  .pIdentifier
  % Output token text 'j'
 .pComma
  .pIdentifier
  % Output token text 'j'
 .pPlus
  .pInteger
  % Output token text '1'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'lt'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
 .pNot
  .pIdentifier
  % Output token text 'lt'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'swap'
 .pLeftParen
  .pIdentifier
  % Output token text 'j'
 .pComma
  .pIdentifier
  % Output token text 'j'
 .pPlus
  .pInteger
  % Output token text '1'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'j'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pMinusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'show'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'sort'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'show'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file francais.pt
  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'input'
 .pComma
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'infinitive'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'root'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Please give me a regular French 'er' verb (end with 'arreter')'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'infinitive'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Thanks, here is the present conjugation'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'root'
 .pEquals
  .pIdentifier
  % Output token text 'infinitive'
 .pForwardSlash
  .pInteger
  % Output token text '1'
 .pColon
 .pLeftParen
 .pQuestionMark
  .pIdentifier
  % Output token text 'infinitive'
 .pMinus
  .pInteger
  % Output token text '2'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The root of this verb is ''
 .pComma
  .pIdentifier
  % Output token text 'root'
 .pComma
  .pStringLiteral
  % Output token text '''
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'infinitive'
 .pForwardSlash
 .pLeftParen
 .pQuestionMark
  .pIdentifier
  % Output token text 'infinitive'
 .pMinus
  .pInteger
  % Output token text '1'
 .pRightParen
 .pColon
 .pQuestionMark
  .pIdentifier
  % Output token text 'infinitive'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'er'
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'root'
 .pForwardSlash
  .pInteger
  % Output token text '1'
 .pColon
  .pInteger
  % Output token text '1'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'a'
 .pRightParen
 .pDoubleBar
 .pLeftParen
  .pIdentifier
  % Output token text 'root'
 .pForwardSlash
  .pInteger
  % Output token text '1'
 .pColon
  .pInteger
  % Output token text '1'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'e'
 .pRightParen
 .pNewLine
 .pDoubleBar
 .pLeftParen
  .pIdentifier
  % Output token text 'root'
 .pForwardSlash
  .pInteger
  % Output token text '1'
 .pColon
  .pInteger
  % Output token text '1'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'i'
 .pRightParen
 .pDoubleBar
 .pLeftParen
  .pIdentifier
  % Output token text 'root'
 .pForwardSlash
  .pInteger
  % Output token text '1'
 .pColon
  .pInteger
  % Output token text '1'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'o'
 .pRightParen
 .pNewLine
 .pDoubleBar
 .pLeftParen
  .pIdentifier
  % Output token text 'root'
 .pForwardSlash
  .pInteger
  % Output token text '1'
 .pColon
  .pInteger
  % Output token text '1'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'u'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'J''
 .pPlus
  .pIdentifier
  % Output token text 'root'
 .pPlus
  .pStringLiteral
  % Output token text 'e'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Je '
 .pPlus
  .pIdentifier
  % Output token text 'root'
 .pPlus
  .pStringLiteral
  % Output token text 'e'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Tu '
 .pPlus
  .pIdentifier
  % Output token text 'root'
 .pPlus
  .pStringLiteral
  % Output token text 'es'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Il ou elle '
 .pPlus
  .pIdentifier
  % Output token text 'root'
 .pPlus
  .pStringLiteral
  % Output token text 'e'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'root'
 .pForwardSlash
 .pQuestionMark
  .pIdentifier
  % Output token text 'root'
 .pColon
 .pQuestionMark
  .pIdentifier
  % Output token text 'root'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'g'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Nous '
 .pPlus
  .pIdentifier
  % Output token text 'root'
 .pPlus
  .pStringLiteral
  % Output token text 'eons'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Nous '
 .pPlus
  .pIdentifier
  % Output token text 'root'
 .pPlus
  .pStringLiteral
  % Output token text 'ons'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Vous '
 .pPlus
  .pIdentifier
  % Output token text 'root'
 .pPlus
  .pStringLiteral
  % Output token text 'ez'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Ils ou elles '
 .pPlus
  .pIdentifier
  % Output token text 'root'
 .pPlus
  .pStringLiteral
  % Output token text 'ent'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'infinitive'
 .pForwardSlash
 .pLeftParen
 .pQuestionMark
  .pIdentifier
  % Output token text 'infinitive'
 .pMinus
  .pInteger
  % Output token text '1'
 .pRightParen
 .pColon
 .pQuestionMark
  .pIdentifier
  % Output token text 'infinitive'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'ir'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'I'm too tired to do an 'ir' verb'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'I don't like the looks of this verb'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'infinitive'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'arreter'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file primes.pt
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'maxprimes'
 .pEquals
  .pInteger
  % Output token text '100'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'prime'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'notprime'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier
  % Output token text 'flags'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'flagvector'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'bool'
 .pColon
  .pIdentifier
  % Output token text 'maxprimes'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'flagset'
 .pLeftParen
  .pIdentifier
  % Output token text 'f'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'tf'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'flagvector'
 .pLeftBracket
  .pIdentifier
  % Output token text 'f'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'tf'
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'flagget'
 .pLeftParen
  .pIdentifier
  % Output token text 'f'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'set'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'set'
 .pEquals
  .pIdentifier
  % Output token text 'flagvector'
 .pLeftBracket
  .pIdentifier
  % Output token text 'f'
 .pRightBracket
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'i'
 .pLessEqual
  .pIdentifier
  % Output token text 'maxprimes'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'flagvector'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'prime'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'isprime'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'multiple'
 .pEquals
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'factor'
 .pEquals
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'factor'
 .pLessEqual
  .pIdentifier
  % Output token text 'maxprimes'
 .pForwardSlash
  .pInteger
  % Output token text '2'
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'multiple'
 .pEquals
  .pIdentifier
  % Output token text 'factor'
 .pPlus
  .pIdentifier
  % Output token text 'factor'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'multiple'
 .pLessEqual
  .pIdentifier
  % Output token text 'maxprimes'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'flagset'
 .pLeftParen
  .pIdentifier
  % Output token text 'multiple'
 .pComma
  .pIdentifier
  % Output token text 'notprime'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'multiple'
 .pPlusEquals
  .pIdentifier
  % Output token text 'factor'
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'factor'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'flagget'
 .pLeftParen
  .pIdentifier
  % Output token text 'factor'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'isprime'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'factor'
 .pGreater
  .pIdentifier
  % Output token text 'maxprimes'
 .pForwardSlash
  .pInteger
  % Output token text '2'
 .pRightParen
 .pDoubleBar
  .pIdentifier
  % Output token text 'isprime'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'factor'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The primes up to '
 .pComma
  .pIdentifier
  % Output token text 'maxprimes'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text ' are:'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'factor'
 .pEquals
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'factor'
 .pLessEqual
  .pIdentifier
  % Output token text 'maxprimes'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'flagget'
 .pLeftParen
  .pIdentifier
  % Output token text 'factor'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'isprime'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'isprime'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'factor'
 .pColon
  .pInteger
  % Output token text '4'
 .pRightParen
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'factor'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file mprimes.pt
  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'maxprimes'
 .pEquals
  .pInteger
  % Output token text '100'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier
  % Output token text 'maxfactor'
 .pEquals
  .pInteger
  % Output token text '50'
 .pForwardSlash
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'prime'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'notprime'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier
  % Output token text 'flags'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'flagvector'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'bool'
 .pColon
  .pIdentifier
  % Output token text 'maxprimes'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'flagset'
 .pLeftParen
  .pIdentifier
  % Output token text 'f'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'tf'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'flagvector'
 .pLeftBracket
  .pIdentifier
  % Output token text 'f'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'tf'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'flag'
 .pLeftParen
  .pIdentifier
  % Output token text 'f'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'set'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'set'
 .pEquals
  .pIdentifier
  % Output token text 'flagvector'
 .pLeftBracket
  .pIdentifier
  % Output token text 'f'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'i'
 .pLessEqual
  .pIdentifier
  % Output token text 'maxprimes'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'flagvector'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'prime'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'multiple'
 .pEquals
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'factor'
 .pEquals
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'factor'
 .pGreater
  .pIdentifier
  % Output token text 'maxfactor'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'multiple'
 .pEquals
  .pIdentifier
  % Output token text 'factor'
 .pPlus
  .pIdentifier
  % Output token text 'factor'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'multiple'
 .pGreater
  .pIdentifier
  % Output token text 'maxprimes'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'flagset'
 .pLeftParen
  .pIdentifier
  % Output token text 'multiple'
 .pComma
  .pIdentifier
  % Output token text 'notprime'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'multiple'
 .pPlusEquals
  .pIdentifier
  % Output token text 'factor'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nextfactor'
 .pEquals
  .pIdentifier
  % Output token text 'factor'
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'isprime'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'flag'
 .pLeftParen
  .pIdentifier
  % Output token text 'nextfactor'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'isprime'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'nextfactor'
 .pGreater
  .pIdentifier
  % Output token text 'maxprimes'
 .pRightParen
 .pDoubleBar
  .pIdentifier
  % Output token text 'isprime'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'nextfactor'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'flag'
 .pLeftParen
  .pIdentifier
  % Output token text 'nextfactor'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'isprime'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'factor'
 .pEquals
  .pIdentifier
  % Output token text 'nextfactor'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The primes up to '
 .pComma
  .pIdentifier
  % Output token text 'maxprimes'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text ' are:'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nextfactor'
 .pEquals
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'nextfactor'
 .pGreater
  .pIdentifier
  % Output token text 'maxprimes'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'isprime'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'flag'
 .pLeftParen
  .pIdentifier
  % Output token text 'nextfactor'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'isprime'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'isprime'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'nextfactor'
 .pColon
  .pInteger
  % Output token text '4'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'nextfactor'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file lunch.pt
  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'animal'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'str'
 .pColon
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'remark'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'str'
 .pColon
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'verse'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'countdown'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'fly'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '2'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'spider'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '3'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'bird'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '4'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'cat'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '5'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'dog'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '6'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'goat'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '7'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'cow'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'horse'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'I don't know why she swallowed a fly.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '2'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'That wiggled and jiggled and tickled inside her.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '3'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'How absurd, to swallow a bird.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '4'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'Imagine that, she swallowed a cat.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '5'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'What a hog, to swallow a dog.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '6'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'What a dope, to swallow a goat.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '7'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'I don't know how she swallowed that cow.'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'She died of course.'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'I Know an Old Lady'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'verse'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'verse'
 .pEqualGreater
  .pInteger
  % Output token text '8'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'I know an old lady'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Who swallowed a '
 .pPlus
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'verse'
 .pRightBracket
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pIdentifier
  % Output token text 'verse'
 .pRightBracket
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'countdown'
 .pEquals
  .pIdentifier
  % Output token text 'verse'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'countdown'
 .pLess
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'She swallowed the '
 .pPlus
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'countdown'
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' to catch the '
 .pPlus
  .pIdentifier
  % Output token text 'animal'
 .pLeftBracket
  .pIdentifier
  % Output token text 'countdown'
 .pMinus
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pPlus
  .pStringLiteral
  % Output token text ','
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'countdown'
 .pMinusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'verse'
 .pGreater
  .pInteger
  % Output token text '1'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'remark'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'verse'
 .pLess
  .pInteger
  % Output token text '8'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Perhaps she'll die.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'verse'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The end.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Thank you very much, you're too kind.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'I'll be here until Thursday - try the veal!'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file treesort.pt
  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'input'
 .pComma
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'nilpointer'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pConst)
  .pIdentifier
  % Output token text 'maxtreeelements'
 .pEquals
  .pInteger
  % Output token text '100'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pType)
  .pIdentifier
  % Output token text 'treereference'
 .pEquals
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'root'
 .pColon
  .pIdentifier
  % Output token text 'treereference'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'treeleft'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'treereference'
 .pColon
  .pIdentifier
  % Output token text 'maxtreeelements'
 .pRightBracket
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'treeright'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'treereference'
 .pColon
  .pIdentifier
  % Output token text 'maxtreeelements'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'treeval'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pIdentifier
  % Output token text 'maxtreeelements'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'avail'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'insert'
 .pLeftParen
  .pIdentifier
  % Output token text 'val'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'node'
 .pColon
  .pIdentifier
  % Output token text 'treereference'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'treeval'
 .pLeftBracket
  .pIdentifier
  % Output token text 'avail'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'val'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'treeright'
 .pLeftBracket
  .pIdentifier
  % Output token text 'avail'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'nilpointer'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'treeleft'
 .pLeftBracket
  .pIdentifier
  % Output token text 'avail'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'nilpointer'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'root'
 .pDoubleEquals
  .pIdentifier
  % Output token text 'nilpointer'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'root'
 .pEquals
  .pIdentifier
  % Output token text 'avail'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'node'
 .pEquals
  .pIdentifier
  % Output token text 'root'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'val'
 .pLess
  .pIdentifier
  % Output token text 'treeval'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'treeleft'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pDoubleEquals
  .pIdentifier
  % Output token text 'nilpointer'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'treeleft'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'avail'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'node'
 .pEquals
  .pIdentifier
  % Output token text 'avail'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'node'
 .pEquals
  .pIdentifier
  % Output token text 'treeleft'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'val'
 .pGreater
  .pIdentifier
  % Output token text 'treeval'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'treeright'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pDoubleEquals
  .pIdentifier
  % Output token text 'nilpointer'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'treeright'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'avail'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'node'
 .pEquals
  .pIdentifier
  % Output token text 'avail'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'node'
 .pEquals
  .pIdentifier
  % Output token text 'treeright'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'treeval'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pDoubleEquals
  .pIdentifier
  % Output token text 'val'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'avail'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'walk'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'stack'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'treereference'
 .pColon
  .pIdentifier
  % Output token text 'maxtreeelements'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'top'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'node'
 .pColon
  .pIdentifier
  % Output token text 'treereference'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'done'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'top'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'node'
 .pEquals
  .pIdentifier
  % Output token text 'root'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'done'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'node'
 .pNotEqual
  .pIdentifier
  % Output token text 'nilpointer'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'top'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'stack'
 .pLeftBracket
  .pIdentifier
  % Output token text 'top'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'node'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'node'
 .pEquals
  .pIdentifier
  % Output token text 'treeleft'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'top'
 .pGreater
  .pInteger
  % Output token text '0'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'node'
 .pEquals
  .pIdentifier
  % Output token text 'stack'
 .pLeftBracket
  .pIdentifier
  % Output token text 'top'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'top'
 .pMinusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'treeval'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text ' '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'node'
 .pEquals
  .pIdentifier
  % Output token text 'treeright'
 .pLeftBracket
  .pIdentifier
  % Output token text 'node'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'done'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'done'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 's'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pIdentifier
  % Output token text 'maxtreeelements'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'treeval'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'treeleft'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'nilpointer'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'treeright'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'nilpointer'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'avail'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'root'
 .pEquals
  .pIdentifier
  % Output token text 'nilpointer'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Type in some integers, please, ending with 0'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 's'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 's'
 .pNotEqual
  .pInteger
  % Output token text '0'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'insert'
 .pLeftParen
  .pIdentifier
  % Output token text 's'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 's'
 .pDoubleEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'walk'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file bust.pt
  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'input'
 .pComma
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pType)
  .pIdentifier
  % Output token text 'handarray'
 .pEquals
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '7'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pColon
  .pIdentifier
  % Output token text 'handarray'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pColon
  .pIdentifier
  % Output token text 'handarray'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playerscards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealerscards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'gamesplayed'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealerscount'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playerscount'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealerstops'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playerstops'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playersname'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'deck'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '52'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nextcard'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'cardnames'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'str'
 .pColon
  .pInteger
  % Output token text '13'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'seed'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'multiplier'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'randint'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'result'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'modulus'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'multiplier'
 .pDoubleEquals
  .pInteger
  % Output token text '17'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'multiplier'
 .pEquals
  .pInteger
  % Output token text '19'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'multiplier'
 .pEquals
  .pInteger
  % Output token text '17'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'seed'
 .pEquals
 .pLeftParen
  .pIdentifier
  % Output token text 'seed'
 .pStar
  .pIdentifier
  % Output token text 'multiplier'
 .pRightParen
 .pPercent
  .pInteger
  % Output token text '10000'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'result'
 .pEquals
 .pLeftParen
  .pIdentifier
  % Output token text 'seed'
 .pPercent
  .pIdentifier
  % Output token text 'modulus'
 .pRightParen
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'shuffle'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'card'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'cardcount'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '13'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'c'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'ncards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'c'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'cardcount'
 .pLeftBracket
  .pIdentifier
  % Output token text 'c'
 .pRightBracket
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'c'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'c'
 .pGreater
  .pInteger
  % Output token text '13'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'ncards'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'randint'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'card'
 .pComma
  .pInteger
  % Output token text '13'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'cardcount'
 .pLeftBracket
  .pIdentifier
  % Output token text 'card'
 .pRightBracket
 .pNotEqual
  .pInteger
  % Output token text '4'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'randint'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'card'
 .pComma
  .pInteger
  % Output token text '13'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'deck'
 .pLeftBracket
  .pIdentifier
  % Output token text 'ncards'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'card'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardcount'
 .pLeftBracket
  .pIdentifier
  % Output token text 'card'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'cardcount'
 .pLeftBracket
  .pIdentifier
  % Output token text 'card'
 .pRightBracket
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'ncards'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'ncards'
 .pGreater
  .pInteger
  % Output token text '52'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'nextcard'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'dealcard'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'card'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'nextcard'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'card'
 .pEquals
  .pIdentifier
  % Output token text 'deck'
 .pLeftBracket
  .pIdentifier
  % Output token text 'nextcard'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'cardsleft'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'number'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'number'
 .pEquals
  .pInteger
  % Output token text '52'
 .pMinus
  .pIdentifier
  % Output token text 'nextcard'
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'ncards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'hand'
 .pColon
  .pIdentifier
  % Output token text 'handarray'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pIdentifier
  % Output token text 'ncards'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' '
 .pComma
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pIdentifier
  % Output token text 'hand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'E.O. Thorp'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'j'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Jim'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Pooja'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'somebodyplays'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'r'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'gamesplayed'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'New shuffle.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Choose a player (e for E.O.Thorp, j for Jim, p for Pooja, q to quit): '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'playersname'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'q'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pNotEqual
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'What does s/he stand on? '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pGreater
  .pInteger
  % Output token text '0'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pLess
  .pInteger
  % Output token text '21'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '(1..20): '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'E.O.Thorp plays this time.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Next player is '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'S/he stops at '
 .pComma
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pLess
  .pInteger
  % Output token text '15'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '(What a hamburger!)'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Good luck, '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'playing'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'r'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'numcards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'cardsleft'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'numcards'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'numcards'
 .pGreater
  .pInteger
  % Output token text '10'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'New game.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayed'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Too few cards left for another game.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Of '
 .pComma
  .pIdentifier
  % Output token text 'gamesplayed'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text ' games, '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' won '
 .pComma
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text ', dealer won '
 .pComma
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pGreater
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'House cleans up on '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' this time.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pGreater
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'E.O.Thorp does it again.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' must have doctored the shuffle.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Even shuffle.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerscards'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealcard'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'playerscards'
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'dealertakesacard'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'dealerscards'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealcard'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'dealerscards'
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'deal'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playerscards'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerscards'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The initial deal gives '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' :'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'playerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  and the dealer :'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'dealerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'evaluate'
 .pLeftParen
  .pIdentifier
  % Output token text 'ncards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'hand'
 .pColon
  .pIdentifier
  % Output token text 'handarray'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'value'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nacescounted11'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'nacescounted11'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pIdentifier
  % Output token text 'ncards'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pMatch)
  .pIdentifier
  % Output token text 'hand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pLeftBrace
 .pNewLine
 .pBar
  .pInteger
  % Output token text '2'
 .pBar
  .pInteger
  % Output token text '3'
 .pBar
  .pInteger
  % Output token text '4'
 .pBar
  .pInteger
  % Output token text '5'
 .pBar
  .pInteger
  % Output token text '6'
 .pBar
  .pInteger
  % Output token text '7'
 .pBar
  .pInteger
  % Output token text '8'
 .pBar
  .pInteger
  % Output token text '9'
 .pBar
  .pInteger
  % Output token text '10'
 .pEqualGreater
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pPlusEquals
  .pIdentifier
  % Output token text 'hand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pBar
  .pInteger
  % Output token text '1'
 .pEqualGreater
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pPlusEquals
  .pInteger
  % Output token text '11'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'nacescounted11'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pBar
 .pUnderscore
 .pEqualGreater
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pPlusEquals
  .pInteger
  % Output token text '10'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'value'
 .pLessEqual
  .pInteger
  % Output token text '21'
 .pRightParen
 .pDoubleBar
 .pLeftParen
  .pIdentifier
  % Output token text 'nacescounted11'
 .pDoubleEquals
  .pInteger
  % Output token text '0'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pMinusEquals
  .pInteger
  % Output token text '10'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'nacescounted11'
 .pMinusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'softhand'
 .pEquals
  .pIdentifier
  % Output token text 'nacescounted11'
 .pGreater
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'dealer'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'evaluate'
 .pLeftParen
  .pIdentifier
  % Output token text 'dealerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealerscount'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pGreater
  .pInteger
  % Output token text '21'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Dealer goes bust.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pDoubleEquals
  .pInteger
  % Output token text '21'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Dealer calls blackjack.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pLess
  .pInteger
  % Output token text '17'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'dealertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerstops'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Dealer stands with '
 .pComma
  .pIdentifier
  % Output token text 'dealerscount'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pGreater
  .pIdentifier
  % Output token text 'playerscount'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'House wins.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pLess
  .pIdentifier
  % Output token text 'playerscount'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' wins.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Tie game.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Dealer takes a card and now has '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'dealerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'playerjoenaive'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerscount'
 .pLess
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'playerthorp'
 .pLeftParen
  .pIdentifier
  % Output token text 'softhand'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershows'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealershows'
 .pEquals
  .pIdentifier
  % Output token text 'dealershand'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'softhand'
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealershows'
 .pGreater
  .pInteger
  % Output token text '8'
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '18'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '17'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'dealershows'
 .pGreater
  .pInteger
  % Output token text '1'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'dealershows'
 .pLess
  .pInteger
  % Output token text '4'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '12'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'dealershows'
 .pGreater
  .pInteger
  % Output token text '3'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'dealershows'
 .pLess
  .pInteger
  % Output token text '7'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '11'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '16'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
 .pNot
  .pIdentifier
  % Output token text 'playerstops'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'player'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'evaluate'
 .pLeftParen
  .pIdentifier
  % Output token text 'playerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playerscount'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerscount'
 .pDoubleEquals
  .pInteger
  % Output token text '21'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' calls blackjack.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '21'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' goes bust.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playerthorp'
 .pLeftParen
  .pIdentifier
  % Output token text 'softhand'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playerjoenaive'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerstops'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' stands with '
 .pComma
  .pIdentifier
  % Output token text 'playerscount'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' takes a card and now has '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'playerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'This program simulates the game of blackjack.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The dealer plays the compulsory strategy of standing on 17 or better.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The player plays either'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  [1] The standard naive strategy of standing on n or better, or'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  [2] A simplified version of the strategy described by  E.O.Thorp'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '      in his book "Beat the Dealer" (Vintage Books, 1966) pp. 20-21.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Input :'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  For each shuffle, a player name (character string of <= 20 characters),'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  and if (the player name specified is not "E.O.Thorp", the count [n]'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  on which the player stands.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'If the player name specified is "E.O.Thorp", the player strategy used'
 .pComma
  .pStringLiteral
  % Output token text ' will be Thorp's.'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Otherwise, the player will use the standard stop on count > n strategy.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The program will simulate one complete shuffle of play for each player.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'seed'
 .pEquals
  .pInteger
  % Output token text '13277'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'multiplier'
 .pEquals
  .pInteger
  % Output token text '17'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'A'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '2'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '3'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '3'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '4'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '4'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '5'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '5'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '6'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '6'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '7'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '7'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '8'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '9'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '9'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '10'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '10'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '11'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'J'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '12'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'Q'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '13'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'K'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'somebodyplays'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pNot
  .pIdentifier
  % Output token text 'continue'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'shuffle'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playing'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pNot
  .pIdentifier
  % Output token text 'continue'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'deal'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerstops'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'player'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerstops'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealer'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'playing'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'somebodyplays'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file cache.pt
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'input'
 .pComma
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'n'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'm'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'customer'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '1000'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'ncompares'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'seed'
 .pEquals
  .pInteger
  % Output token text '13277'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'multiplier'
 .pEquals
  .pInteger
  % Output token text '17'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'cachename'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '10'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'cacheindx'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '10'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'cp'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'randint'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'result'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'modulus'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'multiplier'
 .pDoubleEquals
  .pInteger
  % Output token text '17'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'multiplier'
 .pEquals
  .pInteger
  % Output token text '19'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'multiplier'
 .pEquals
  .pInteger
  % Output token text '17'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'seed'
 .pEquals
 .pLeftParen
  .pIdentifier
  % Output token text 'seed'
 .pStar
  .pIdentifier
  % Output token text 'multiplier'
 .pRightParen
 .pPercent
  .pInteger
  % Output token text '10000'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'result'
 .pEquals
 .pLeftParen
  .pIdentifier
  % Output token text 'seed'
 .pPercent
  .pIdentifier
  % Output token text 'modulus'
 .pRightParen
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'initialize'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'i'
 .pLessEqual
  .pIdentifier
  % Output token text 'n'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'p'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'randint'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'p'
 .pComma
  .pInteger
  % Output token text '9000'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'p'
 .pPlusEquals
  .pInteger
  % Output token text '1000'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'p'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'randomname'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'r'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'p'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'randint'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'p'
 .pComma
  .pIdentifier
  % Output token text 'n'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'p'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'findlinear'
 .pLeftParen
  .pIdentifier
  % Output token text 'name'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'r'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
 .pLeftParen
  .pIdentifier
  % Output token text 'i'
 .pLessEqual
  .pIdentifier
  % Output token text 'n'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'r'
 .pDoubleEquals
  .pInteger
  % Output token text '0'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'ncompares'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pDoubleEquals
  .pIdentifier
  % Output token text 'name'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'i'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'findcache'
 .pLeftParen
  .pIdentifier
  % Output token text 'name'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'r'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'c'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
 .pLeftParen
  .pIdentifier
  % Output token text 'c'
 .pLessEqual
  .pInteger
  % Output token text '10'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'r'
 .pDoubleEquals
  .pInteger
  % Output token text '0'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'ncompares'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'cachename'
 .pLeftBracket
  .pIdentifier
  % Output token text 'c'
 .pRightBracket
 .pDoubleEquals
  .pIdentifier
  % Output token text 'name'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'cacheindx'
 .pLeftBracket
  .pIdentifier
  % Output token text 'c'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'c'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
 .pLeftParen
  .pIdentifier
  % Output token text 'i'
 .pLessEqual
  .pIdentifier
  % Output token text 'n'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'r'
 .pDoubleEquals
  .pInteger
  % Output token text '0'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'ncompares'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pDoubleEquals
  .pIdentifier
  % Output token text 'name'
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'cp'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'cp'
 .pGreater
  .pInteger
  % Output token text '10'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'cp'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cachename'
 .pLeftBracket
  .pIdentifier
  % Output token text 'cp'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'name'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cacheindx'
 .pLeftBracket
  .pIdentifier
  % Output token text 'cp'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'i'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'i'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'swap'
 .pLeftParen
  .pIdentifier
  % Output token text 'n1'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'n2'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier
  % Output token text 'temp'
 .pEquals
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'n1'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'n1'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'n2'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'n2'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'temp'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'bubblesort'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nswaps'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'j'
 .pEquals
  .pIdentifier
  % Output token text 'n'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
 .pLeftParen
  .pIdentifier
  % Output token text 'j'
 .pGreater
  .pInteger
  % Output token text '1'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'nswaps'
 .pNotEqual
  .pInteger
  % Output token text '0'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'nswaps'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'k'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'k'
 .pLess
  .pIdentifier
  % Output token text 'j'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'ncompares'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'k'
 .pRightBracket
 .pGreater
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'k'
 .pPlus
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'nswaps'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'swap'
 .pLeftParen
  .pIdentifier
  % Output token text 'k'
 .pComma
  .pIdentifier
  % Output token text 'k'
 .pPlus
  .pInteger
  % Output token text '1'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'k'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'j'
 .pMinusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'findbinary'
 .pLeftParen
  .pIdentifier
  % Output token text 'name'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'r'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'first'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'last'
 .pEquals
  .pIdentifier
  % Output token text 'n'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'first'
 .pNotEqual
  .pIdentifier
  % Output token text 'last'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier
  % Output token text 'mid'
 .pEquals
 .pLeftParen
  .pIdentifier
  % Output token text 'first'
 .pPlus
  .pIdentifier
  % Output token text 'last'
 .pRightParen
 .pForwardSlash
  .pInteger
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'ncompares'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'name'
 .pGreater
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'mid'
 .pRightBracket
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'first'
 .pEquals
  .pIdentifier
  % Output token text 'mid'
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'last'
 .pEquals
  .pIdentifier
  % Output token text 'mid'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'ncompares'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'customer'
 .pLeftBracket
  .pIdentifier
  % Output token text 'first'
 .pRightBracket
 .pDoubleEquals
  .pIdentifier
  % Output token text 'name'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'first'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Enter N (number of elements, at most 1000, e.g. 100): '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'n'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Enter M (number of lookups, e.g. 1000): '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'm'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Enter a prime number (e.g. 13, 19, 51, ...): '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'multiplier'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'initialize'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Linear lookup'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'ncompares'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'c'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'c'
 .pLessEqual
  .pIdentifier
  % Output token text 'm'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nm'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'indx'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'randomname'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nm'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'findlinear'
 .pLeftParen
  .pIdentifier
  % Output token text 'nm'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'indx'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'c'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'cavg'
 .pEquals
  .pIdentifier
  % Output token text 'ncompares'
 .pForwardSlash
  .pIdentifier
  % Output token text 'm'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'N= '
 .pComma
  .pIdentifier
  % Output token text 'n'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '  Average compares per search (Cavg) == '
 .pComma
  .pIdentifier
  % Output token text 'cavg'
 .pColon
  .pInteger
  % Output token text '1'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Linear lookup with cache'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'ncompares'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'cp'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'j'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'j'
 .pLessEqual
  .pInteger
  % Output token text '10'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'cachename'
 .pLeftBracket
  .pIdentifier
  % Output token text 'j'
 .pRightBracket
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'j'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'c'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'c'
 .pLessEqual
  .pIdentifier
  % Output token text 'm'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nm'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'indx'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'randomname'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nm'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'findcache'
 .pLeftParen
  .pIdentifier
  % Output token text 'nm'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'indx'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'c'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'cavg'
 .pEquals
  .pIdentifier
  % Output token text 'ncompares'
 .pForwardSlash
  .pIdentifier
  % Output token text 'm'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'N= '
 .pComma
  .pIdentifier
  % Output token text 'n'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '  Average compares per search (Cavg) == '
 .pComma
  .pIdentifier
  % Output token text 'cavg'
 .pColon
  .pInteger
  % Output token text '1'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Binary search'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'ncompares'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'bubblesort'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'c'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pWhile)
  .pIdentifier
  % Output token text 'c'
 .pLessEqual
  .pIdentifier
  % Output token text 'm'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nm'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'indx'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'randomname'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nm'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'findbinary'
 .pLeftParen
  .pIdentifier
  % Output token text 'nm'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'indx'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'c'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'cavg'
 .pEquals
  .pIdentifier
  % Output token text 'ncompares'
 .pForwardSlash
  .pIdentifier
  % Output token text 'm'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'N= '
 .pComma
  .pIdentifier
  % Output token text 'n'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '  Average compares per search (Cavg) == '
 .pComma
  .pIdentifier
  % Output token text 'cavg'
 .pColon
  .pInteger
  % Output token text '1'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file
--------------------------------
Reading file mbust.pt
  .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'input'
 .pComma
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pType)
  .pIdentifier
  % Output token text 'handarray'
 .pEquals
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '7'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pColon
  .pIdentifier
  % Output token text 'handarray'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pColon
  .pIdentifier
  % Output token text 'handarray'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playerscards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealerscards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'gamesplayed'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealerscount'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playerscount'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealerstops'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playerstops'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playersname'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier
  % Output token text 'random'
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'seed'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'multiplier'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'initialize'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'seed'
 .pEquals
  .pInteger
  % Output token text '13277'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'multiplier'
 .pEquals
  .pInteger
  % Output token text '17'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'randint'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'result'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier
  % Output token text 'modulus'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'multiplier'
 .pDoubleEquals
  .pInteger
  % Output token text '17'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'multiplier'
 .pEquals
  .pInteger
  % Output token text '19'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'multiplier'
 .pEquals
  .pInteger
  % Output token text '17'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
  .pIdentifier
  % Output token text 'seed'
 .pEquals
 .pLeftParen
  .pIdentifier
  % Output token text 'seed'
 .pStar
  .pIdentifier
  % Output token text 'multiplier'
 .pRightParen
 .pPercent
  .pInteger
  % Output token text '10000'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'result'
 .pEquals
 .pLeftParen
  .pIdentifier
  % Output token text 'seed'
 .pPercent
  .pIdentifier
  % Output token text 'modulus'
 .pRightParen
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'initialize'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier
  % Output token text 'cards'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'deck'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '52'
 .pRightBracket
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nextcard'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'shuffle'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'cardcount'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'int'
 .pColon
  .pInteger
  % Output token text '13'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'c'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'cardcount'
 .pLeftBracket
  .pIdentifier
  % Output token text 'c'
 .pRightBracket
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'c'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'c'
 .pGreater
  .pInteger
  % Output token text '13'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'ncards'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'card'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'randint'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'card'
 .pComma
  .pInteger
  % Output token text '13'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'cardcount'
 .pLeftBracket
  .pIdentifier
  % Output token text 'card'
 .pRightBracket
 .pNotEqual
  .pInteger
  % Output token text '4'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'randint'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'card'
 .pComma
  .pInteger
  % Output token text '13'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'deck'
 .pLeftBracket
  .pIdentifier
  % Output token text 'ncards'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'card'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardcount'
 .pLeftBracket
  .pIdentifier
  % Output token text 'card'
 .pRightBracket
 .pEquals
  .pIdentifier
  % Output token text 'cardcount'
 .pLeftBracket
  .pIdentifier
  % Output token text 'card'
 .pRightBracket
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'ncards'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'ncards'
 .pGreater
  .pInteger
  % Output token text '52'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'nextcard'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'dealcard'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'card'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'nextcard'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'card'
 .pEquals
  .pIdentifier
  % Output token text 'deck'
 .pLeftBracket
  .pIdentifier
  % Output token text 'nextcard'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'cardsleft'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'number'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'number'
 .pEquals
  .pInteger
  % Output token text '52'
 .pMinus
  .pIdentifier
  % Output token text 'nextcard'
 .pPlus
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier
  % Output token text 'namesofcards'
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'cardnames'
 .pColon
 .pLeftBracket
  .pIdentifier
  % Output token text 'str'
 .pColon
  .pInteger
  % Output token text '13'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'ncards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'hand'
 .pColon
  .pIdentifier
  % Output token text 'handarray'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pIdentifier
  % Output token text 'ncards'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' '
 .pComma
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pIdentifier
  % Output token text 'hand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'A'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '2'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '2'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '3'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '3'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '4'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '4'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '5'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '5'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '6'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '6'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '7'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '7'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '8'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '8'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '9'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '9'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '10'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text '10'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '11'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'J'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '12'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'Q'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardnames'
 .pLeftBracket
  .pInteger
  % Output token text '13'
 .pRightBracket
 .pEquals
  .pStringLiteral
  % Output token text 'K'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'E.O. Thorp'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'j'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Jim'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Pooja'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'somebodyplays'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'r'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'gamesplayed'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'New shuffle.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Choose a player (e for E.O.Thorp, j for Jim, p for Pooja, q to quit): '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'playersname'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'q'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pNotEqual
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'What does s/he stand on? '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pGreater
  .pInteger
  % Output token text '0'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pLess
  .pInteger
  % Output token text '21'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '(1..20): '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'E.O.Thorp plays this time.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Next player is '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'S/he stops at '
 .pComma
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pLess
  .pInteger
  % Output token text '15'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '(What a hamburger!)'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Good luck, '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'playing'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'r'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'numcards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'cardsleft'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'numcards'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'numcards'
 .pGreater
  .pInteger
  % Output token text '10'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'New game.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayed'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Too few cards left for another game.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Of '
 .pComma
  .pIdentifier
  % Output token text 'gamesplayed'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text ' games, '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' won '
 .pComma
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text ', dealer won '
 .pComma
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pGreater
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'House cleans up on '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' this time.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pGreater
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'E.O.Thorp does it again.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' must have doctored the shuffle.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Even shuffle.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'r'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerscards'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealcard'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'playerscards'
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'dealertakesacard'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'dealerscards'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealcard'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'dealerscards'
 .pRightBracket
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'deal'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'false'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playerscards'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerscards'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The initial deal gives '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' :'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'playerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  and the dealer :'
 .pRightParen
 .pSemicolon
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'dealerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'evaluate'
 .pLeftParen
  .pIdentifier
  % Output token text 'ncards'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'hand'
 .pColon
  .pIdentifier
  % Output token text 'handarray'
 .pComma
 .pNewLine
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'value'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'nacescounted11'
 .pEquals
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'i'
 .pEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'i'
 .pGreater
  .pIdentifier
  % Output token text 'ncards'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pMatch)
  .pIdentifier
  % Output token text 'hand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pLeftBrace
 .pNewLine
 .pBar
  .pInteger
  % Output token text '2'
 .pBar
  .pInteger
  % Output token text '3'
 .pBar
  .pInteger
  % Output token text '4'
 .pBar
  .pInteger
  % Output token text '5'
 .pBar
  .pInteger
  % Output token text '6'
 .pBar
  .pInteger
  % Output token text '7'
 .pBar
  .pInteger
  % Output token text '8'
 .pBar
  .pInteger
  % Output token text '9'
 .pBar
  .pInteger
  % Output token text '10'
 .pEqualGreater
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pPlusEquals
  .pIdentifier
  % Output token text 'hand'
 .pLeftBracket
  .pIdentifier
  % Output token text 'i'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pBar
  .pInteger
  % Output token text '1'
 .pEqualGreater
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pPlusEquals
  .pInteger
  % Output token text '11'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'nacescounted11'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pBar
 .pUnderscore
 .pEqualGreater
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pPlusEquals
  .pInteger
  % Output token text '10'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'i'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'value'
 .pLessEqual
  .pInteger
  % Output token text '21'
 .pRightParen
 .pDoubleBar
 .pLeftParen
  .pIdentifier
  % Output token text 'nacescounted11'
 .pDoubleEquals
  .pInteger
  % Output token text '0'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'value'
 .pMinusEquals
  .pInteger
  % Output token text '10'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'nacescounted11'
 .pMinusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'softhand'
 .pEquals
  .pIdentifier
  % Output token text 'nacescounted11'
 .pGreater
  .pInteger
  % Output token text '0'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'dealer'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'evaluate'
 .pLeftParen
  .pIdentifier
  % Output token text 'dealerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealerscount'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pGreater
  .pInteger
  % Output token text '21'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Dealer goes bust.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pDoubleEquals
  .pInteger
  % Output token text '21'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Dealer calls blackjack.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pLess
  .pInteger
  % Output token text '17'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'dealertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerstops'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Dealer stands with '
 .pComma
  .pIdentifier
  % Output token text 'dealerscount'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pGreater
  .pIdentifier
  % Output token text 'playerscount'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'House wins.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerscount'
 .pLess
  .pIdentifier
  % Output token text 'playerscount'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' wins.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Tie game.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Dealer takes a card and now has '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'dealerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershand'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier
  % Output token text 'players'
 .pLeftBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'playerjoenaive'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerscount'
 .pLess
  .pIdentifier
  % Output token text 'joenaivesguts'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'playerthorp'
 .pLeftParen
  .pIdentifier
  % Output token text 'softhand'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'dealershows'
 .pColon
  .pIdentifier
  % Output token text 'int'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealershows'
 .pEquals
  .pIdentifier
  % Output token text 'dealershand'
 .pLeftBracket
  .pInteger
  % Output token text '1'
 .pRightBracket
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'softhand'
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealershows'
 .pGreater
  .pInteger
  % Output token text '8'
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '18'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '17'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'dealershows'
 .pGreater
  .pInteger
  % Output token text '1'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'dealershows'
 .pLess
  .pInteger
  % Output token text '4'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '12'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
 .pLeftParen
  .pIdentifier
  % Output token text 'dealershows'
 .pGreater
  .pInteger
  % Output token text '3'
 .pRightParen
 .pDoubleAmpersand
 .pLeftParen
  .pIdentifier
  % Output token text 'dealershows'
 .pLess
  .pInteger
  % Output token text '7'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '11'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '16'
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
 .pNot
  .pIdentifier
  % Output token text 'playerstops'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playertakesacard'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pPub)
  .pIdentifier (screened to pFn)
  .pIdentifier
  % Output token text 'player'
 .pLeftParen
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pNewLine
  .pNewLine
  .pNewLine
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'evaluate'
 .pLeftParen
  .pIdentifier
  % Output token text 'playerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'softhand'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playerscount'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerscount'
 .pDoubleEquals
  .pInteger
  % Output token text '21'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' calls blackjack.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesplayerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerscount'
 .pGreater
  .pInteger
  % Output token text '21'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' goes bust.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealerstops'
 .pEquals
  .pIdentifier
  % Output token text 'true'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'gamesdealerwon'
 .pPlusEquals
  .pInteger
  % Output token text '1'
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playersname'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'e'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playerthorp'
 .pLeftParen
  .pIdentifier
  % Output token text 'softhand'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'playerjoenaive'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerstops'
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' stands with '
 .pComma
  .pIdentifier
  % Output token text 'playerscount'
 .pColon
  .pInteger
  % Output token text '1'
 .pComma
  .pStringLiteral
  % Output token text '.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
  .pIdentifier (screened to pElse)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'putplayersname'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text ' takes a card and now has '
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'puthandimage'
 .pLeftParen
  .pIdentifier
  % Output token text 'playerscards'
 .pComma
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'playershand'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
 .pNewLine
  .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'This program simulates the game of blackjack.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The dealer plays the compulsory strategy of standing on 17 or better.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The player plays either'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  [1] The standard naive strategy of standing on n or better, or'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  [2] A simplified version of the strategy described by  E.O.Thorp'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '      in his book "Beat the Dealer" (Vintage Books, 1966); pp. 20-21.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Input :'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  For each shuffle, a player name (character string of <= 20 characters),'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  and if (the player name specified is not "E.O.Thorp", the count [n]'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text '  on which the player stands.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'If the player name specified is "E.O.Thorp", the player strategy used'
 .pComma
  .pStringLiteral
  % Output token text ' will be Thorp's.'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Otherwise, the player will use the standard stop on count > n strategy.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'The program will simulate one complete shuffle of play for each player.'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pColon
  .pIdentifier
  % Output token text 'bool'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'somebodyplays'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pNot
  .pIdentifier
  % Output token text 'continue'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'shuffle'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'playing'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
 .pNot
  .pIdentifier
  % Output token text 'continue'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'deal'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'playerstops'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'player'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'dealerstops'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'dealer'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'playing'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'somebodyplays'
 .pLeftParen
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'continue'
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile

File diff
-------------------------
end file