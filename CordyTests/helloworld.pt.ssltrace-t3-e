   .tLiteralInteger         // a literal integer value
   oEmitValue               // emit value 2
   % value emitted 2
   .tLiteralAddress         // a address value
   oEmitDataAddress         // address 0 (the starting one!)
   % value emitted 0        // value of address emmited
   .tFileDescriptor         // this file?
   .tWriteBegin             // begin main block?
     .tTrapBegin            // call main function, begin program
     .tLiteralAddress       // address (0)
     oEmitValue
     % value emitted 0
     .tVarParm              // parameters for something
     .tParmEnd              // end parameters for something?
       .tLiteralString      // "Hello world"
       oEmitValue
       % value emitted 11   // integer value of string reference in memory table? 
       oEmitString          // emit the actual string value
       % value emitted 72   'h'
       % value emitted 101  "e"
       % value emitted 108  "l"
       % value emitted 108  'l'
       % value emitted 111  'o'
       % value emitted 32   ' '
       % value emitted 119  'w'
       % value emitted 111  'o'
       % value emitted 114  'r'
       % value emitted 108  'l'
       % value emitted 100  'd'
     .tParmEnd              // end the string parameters
      .tLiteralInteger
      oEmitValue
      % value emitted 1
      .tParmEnd             // end the parameters for print()
      .tTrap                // hit the trap (call the function)
      oEmitTrapKind(trWriteString)  // of type print()
      % value emitted 109   // value of function call in table
    .tWriteEnd        
   .tTrapBegin        // println() call
    .tLiteralAddress  // address of println
    oEmitValue        // no idea at all
    % value emitted 0
    .tVarParm         // println() params
    .tParmEnd         // end params for println()
   .tTrap             // call the function (I think?)
   oEmitTrapKind(trWriteln) // reference to println() (I think?)
   % value emitted 6
 .tTrapBegin          // begin "end of program" trap
 .tTrap               // hit the end of program trap
 oEmitTrapKind(trHalt)  // halt - end of program
 % value emitted 0    // exit cleanly with code 0
