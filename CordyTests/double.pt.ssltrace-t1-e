  .pNewLine
  .pIdentifier (screened to pMod)
  .pIdentifier (screened to pMain)
 .pLeftParen
  .pIdentifier
  % Output token text 'input'
 .pComma
  .pIdentifier
  % Output token text 'output'
 .pRightParen
 .pLeftBrace
 .pNewLine
  .pIdentifier (screened to pLet)
  .pIdentifier (screened to pMut)
  .pIdentifier
  % Output token text 'word'
 .pColon
  .pIdentifier
  % Output token text 'str'
 .pSemicolon
 .pNewLine
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pStringLiteral
  % Output token text 'Anything you can say, I can say twice (end with 'bye'):'
 .pRightParen
 .pSemicolon
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pLoop)
 .pLeftBrace
 .pNewLine
  .pIdentifier
  % Output token text 'read'
 .pLeftParen
  .pIdentifier
  % Output token text 'word'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'print'
 .pLeftParen
  .pIdentifier
  % Output token text 'word'
 .pPlus
  .pStringLiteral
  % Output token text ' '
 .pPlus
  .pIdentifier
  % Output token text 'word'
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'println'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
  .pIdentifier (screened to pBreak)
  .pIdentifier (screened to pIf)
  .pIdentifier
  % Output token text 'word'
 .pDoubleEquals
  .pStringLiteral
  % Output token text 'bye'
 .pSemicolon
 .pNewLine
  .pIdentifier
  % Output token text 'readln'
 .pLeftParen
 .pRightParen
 .pSemicolon
 .pNewLine
 .pRightBrace
 .pNewLine
 .pRightBrace
 .pNewLine
 .pEndFile
